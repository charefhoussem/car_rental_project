
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PC
 */
public class rent_car extends javax.swing.JFrame {
   
    
  Connection con;
    public rent_car() {
        initComponents();
            try {
            
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(rent_car.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        available_cars = new javax.swing.JTable();
        id = new javax.swing.JTextField();
        rent = new javax.swing.JButton();
        back = new javax.swing.JButton();
        customer_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        choice = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        start_date = new com.toedter.calendar.JDateChooser();
        return_date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        available_cars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(available_cars);

        rent.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        rent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-checked-radio-button-24.png"))); // NOI18N
        rent.setText("rent");
        rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-back-arrow-24.png"))); // NOI18N
        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        customer_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_idActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("customer id");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setText("start date");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setText("return date");

        choice.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        choice.setText("choose a car");
        choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Serif", 3, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("rent a car");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(choice))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(customer_id)
                            .addComponent(start_date, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(return_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(back)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(rent))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1))
                    .addComponent(customer_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(start_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(return_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(choice)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rent))
                .addGap(18, 18, 18)
                .addComponent(back)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
 this.setVisible(false);
 new customer().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void rentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentActionPerformed
        // TODO add your handling code here:
    try{    
            DateFormat df=new SimpleDateFormat("YYYY-MM-dd"); 
            
            if (!id.getText().isEmpty())
            {      
                Statement stmt = con.createStatement( );
                                       
                 String SQL1 = "select max(rental_id) from rental ;";
                         
                   
                 
                 ResultSet rs1 = stmt.executeQuery( SQL1 );
                 int r_id = 0;
               
                 while(rs1.next()){
                 r_id=rs1.getInt("MAX(rental_id)")+1;              
                 }
                 
                int ID = Integer.parseInt(id.getText());
                Statement statement = con.createStatement();
                int test=0;
               int rows = available_cars.getRowCount();
                 for(int i=0;i<rows;i++){
                    int x= (int) available_cars.getValueAt(i, 0); 
                    if(x==ID){
                        test=1;
                    }
                 }
                 
                String sql="INSERT INTO rental(rental_id,start_date,return_date,customer_id,car_id) VALUES ("+r_id+",'" + df.format(start_date.getDate()) + "','" + df.format(return_date.getDate()) + "'," +Integer.parseInt(customer_id.getText())+ "," +ID+");";
                
                if(test!=0){
                    statement.executeUpdate(sql);
                    choice.doClick();
                    JOptionPane.showMessageDialog(this, "Congratulation the Car chosen is Rented, you can visit our agengy the D-DAY to take the car and make the payment!", "Success Message", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, " No record found, only the cars ID listed in the table below are available ", "Execution Alert", JOptionPane.ERROR_MESSAGE);
                }
                
            }else {
            JOptionPane.showMessageDialog(this, "ERROR \nID must be entered", "Execution Alert", JOptionPane.ERROR_MESSAGE);}
            
     } catch (SQLException ex) {
         Logger.getLogger(rent_car.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_rentActionPerformed

    private void choiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceActionPerformed
        // TODO add your handling code here:
  
System.out.println(evt);
DefaultTableModel model= new DefaultTableModel();
        

                model.addColumn("ID");
                model.addColumn("TYPE");
                model.addColumn("REFERENCE");
               
   try
        {               
      
                
                 Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "");
                 Statement stmt = con.createStatement( );
                 DateFormat df=new SimpleDateFormat("YYYY-MM-dd");                                 
                 
                         
                 String SQL1 = "select DISTINCT c.car_id, c.TYPE, c.REFFRENCE from car c,rental r where c.car_id=r.car_id and c.availability='available' and r.RETURN_DATE<='"+df.format(start_date.getDate())+"' and "
                         + "(select min(r1.start_date) from rental r1 where r.car_id=r1.car_id and r1.start_date>r.return_date)>"
                         + "'"+df.format(return_date.getDate())+"' or (SELECT COUNT(*) from rental r2 where c.CAR_ID=r2.CAR_ID)=0 "
                         + "or (select max(r3.RETURN_DATE) from rental r3 where c.car_id=r3.CAR_ID)<'"+df.format(start_date.getDate())+"' "
                         + "or (select min(r4.start_date) from rental r4 where c.car_id=r4.CAR_ID)>'"+df.format(return_date.getDate())+"';"; 
                 ResultSet rs1 = stmt.executeQuery( SQL1 );
                
                model.setRowCount(0);
              
                 
                 while(rs1.next()){
                 model.addRow(new Object  []  { 
                         rs1.getInt(1),
                         rs1.getString(2),
                         rs1.getString(3),
                         });
                 available_cars.setModel(model);
                 }
        }
        catch(SQLException x)
        {
                System.out.println("Exception :" + x);
                
        }


    }//GEN-LAST:event_choiceActionPerformed

    private void customer_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rent_car.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rent_car.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rent_car.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rent_car.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rent_car().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable available_cars;
    private javax.swing.JButton back;
    private javax.swing.JButton choice;
    private javax.swing.JTextField customer_id;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rent;
    private com.toedter.calendar.JDateChooser return_date;
    private com.toedter.calendar.JDateChooser start_date;
    // End of variables declaration//GEN-END:variables
}
